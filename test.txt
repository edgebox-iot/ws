# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}
# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}
gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
access_log off;
include /etc/nginx/proxy.conf;
server {
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	listen 80;
	access_log /var/log/nginx/access.log vhost;
	return 503;
}
# api.edgebox.local
upstream api.edgebox.local {
				## Can be connect with "ws_default" network
			# edgebox-api-ws
			server 172.23.0.7:80;
}
server {
	server_name api.edgebox.local;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://api.edgebox.local;
	}
}
# api.localhost
upstream api.localhost {
				## Can be connect with "ws_default" network
			# edgebox-api-ws
			server 172.23.0.7:80;
}
server {
	server_name api.localhost;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://api.localhost;
	}
}
# bitwarden.edgebox.local
upstream bitwarden.edgebox.local {
				## Can be connect with "ws_default" network
			# edgebox-bitwarden-ws
			server 172.23.0.5:80;
}
server {
	server_name bitwarden.edgebox.local;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://bitwarden.edgebox.local;
	}
}
# bitwarden.localhost
upstream bitwarden.localhost {
				## Can be connect with "ws_default" network
			# edgebox-bitwarden-ws
			server 172.23.0.5:80;
}
server {
	server_name bitwarden.localhost;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://bitwarden.localhost;
	}
}
# edgebox
upstream edgebox {
				## Can be connect with "ws_default" network
			# edgebox-api-ws
			server 172.23.0.7:80;
}
server {
	server_name edgebox;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://edgebox;
	}
}
# n8n.edgebox.local
upstream n8n.edgebox.local {
				## Can be connect with "ws_default" network
			# edgebox-n8n-ws
			server 172.23.0.4:80;
}
server {
	server_name n8n.edgebox.local;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://n8n.edgebox.local;
	}
}
# n8n.localhost
upstream n8n.localhost {
				## Can be connect with "ws_default" network
			# edgebox-n8n-ws
			server 172.23.0.4:80;
}
server {
	server_name n8n.localhost;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://n8n.localhost;
	}
}
# nextcloud.edgebox.local
upstream nextcloud.edgebox.local {
				## Can be connect with "ws_default" network
			# edgebox-nextcloud-ws
			server 172.23.0.8:80;
}
server {
	server_name nextcloud.edgebox.local;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://nextcloud.edgebox.local;
	}
}
# nextcloud.localhost
upstream nextcloud.localhost {
				## Can be connect with "ws_default" network
			# edgebox-nextcloud-ws
			server 172.23.0.8:80;
}
server {
	server_name nextcloud.localhost;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://nextcloud.localhost;
	}
}
# st-bitwarden.myedge.app
upstream st-bitwarden.myedge.app {
				## Can be connect with "ws_default" network
			# edgebox-bitwarden-ws
			server 172.23.0.5:80;
}
server {
	server_name st-bitwarden.myedge.app;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://st-bitwarden.myedge.app;
	}
}
# st-nextcloud.myedge.app
upstream st-nextcloud.myedge.app {
				## Can be connect with "ws_default" network
			# edgebox-nextcloud-ws
			server 172.23.0.8:80;
}
server {
	server_name st-nextcloud.myedge.app;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	location / {
		proxy_pass http://st-nextcloud.myedge.app;
	}
}
